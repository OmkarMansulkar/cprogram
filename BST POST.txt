BST POSTORDER
#include <stdio.h>
#include <stdlib.h>

// Define structure for a node
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

// Function to create a new node
struct Node* createNode(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->left = newNode->right = NULL;
    return newNode;
}

// Function to insert a value into the BST
struct Node* insert(struct Node* root, int value) {
    if (root == NULL)
        return createNode(value);
    if (value < root->data)
        root->left = insert(root->left, value);
    else
        root->right = insert(root->right, value);
    return root;
}

// Postorder Traversal: Left ? Right ? Root
void postorder(struct Node* root) {
    if (root != NULL) {
        postorder(root->left);
        postorder(root->right);
        printf("%d ", root->data);
    }
}

int main() {
    struct Node* root = NULL;
    int val;

    // Insert 3 values
    for (int i = 0; i < 3; i++) {
        printf("Enter value to insert: ");
        scanf("%d", &val);
        root = insert(root, val);
    }

    // Display Postorder traversal
    printf("Postorder Traversal: ");
    postorder(root);
    printf("\n");

    return 0;
}
