BST CREATE AND SEARCH
#include <stdio.h>
#include <stdlib.h>

// Define a node
struct Node {
    int data;
    struct Node* left;
    struct Node* right;
};

// Create new node
struct Node* createNode(int value) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = value;
    newNode->left = newNode->right = NULL;
    return newNode;
}

// Insert into BST
struct Node* insert(struct Node* root, int value) {
    if (root == NULL)
        return createNode(value);
    if (value < root->data)
        root->left = insert(root->left, value);
    else
        root->right = insert(root->right, value);
    return root;
}

// Search in BST
int search(struct Node* root, int key) {
    if (root == NULL)
        return 0;
    if (root->data == key)
        return 1;
    if (key < root->data)
        return search(root->left, key);
    else
        return search(root->right, key);
}

int main() {
    struct Node* root = NULL;
    int val, key;

    // Create BST with 3 nodes
    for (int i = 0; i < 3; i++) {
        printf("Enter value to insert: ");
        scanf("%d", &val);
        root = insert(root, val);
    }

    // Search in BST
    printf("Enter value to search: ");
    scanf("%d", &key);

    if (search(root, key))
        printf("Value found in BST.\n");
    else
        printf("Value not found in BST.\n");

    return 0;
}
