Graph Creation and BFS Traversal
#include <stdio.h>

#define SIZE 10

int graph[SIZE][SIZE];   // Adjacency matrix
int visited[SIZE];       // Visited array
int queue[SIZE];         // Queue for BFS
int front = 0, rear = -1;

// Enqueue function
void enqueue(int value) {
    queue[++rear] = value;
}

// Dequeue function
int dequeue() {
    return queue[front++];
}

// BFS traversal function
void bfs(int start, int vertices) {
    int i;
    enqueue(start);
    visited[start] = 1;

    printf("BFS Traversal: ");

    while (front <= rear) {
        int node = dequeue();
        printf("%d ", node);

        for (i = 0; i < vertices; i++) {
            if (graph[node][i] == 1 && !visited[i]) {
                enqueue(i);
                visited[i] = 1;
            }
        }
    }
    printf("\n");
}

int main() {
    int vertices, edges, u, v, start;

    printf("Enter number of vertices: ");
    scanf("%d", &vertices);

    printf("Enter number of edges: ");
    scanf("%d", &edges);

    // Input edges
    for (int i = 0; i < edges; i++) {
        printf("Enter edge (u v): ");
        scanf("%d %d", &u, &v);
        graph[u][v] = 1;
        graph[v][u] = 1;  // For undirected graph
    }

    printf("Enter starting vertex for BFS: ");
    scanf("%d", &start);

    bfs(start, vertices);

    return 0;
}
